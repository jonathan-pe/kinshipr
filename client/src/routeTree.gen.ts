/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './modules/__root'
import { Route as NonAuthedRouteImport } from './modules/_nonAuthed/route'
import { Route as AuthedRouteImport } from './modules/_authed/route'
import { Route as NonAuthedIndexImport } from './modules/_nonAuthed/index'
import { Route as NonAuthedRegisterIndexImport } from './modules/_nonAuthed/register/index'
import { Route as NonAuthedLoginIndexImport } from './modules/_nonAuthed/login/index'
import { Route as AuthedProfileIndexImport } from './modules/_authed/profile/index'
import { Route as AuthedFeedIndexImport } from './modules/_authed/feed/index'
import { Route as NonAuthedLoginSsoCallbackImport } from './modules/_nonAuthed/login/sso-callback'

// Create/Update Routes

const NonAuthedRouteRoute = NonAuthedRouteImport.update({
  id: '/_nonAuthed',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRouteRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const NonAuthedIndexRoute = NonAuthedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NonAuthedRouteRoute,
} as any)

const NonAuthedRegisterIndexRoute = NonAuthedRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => NonAuthedRouteRoute,
} as any)

const NonAuthedLoginIndexRoute = NonAuthedLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => NonAuthedRouteRoute,
} as any)

const AuthedProfileIndexRoute = AuthedProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AuthedRouteRoute,
} as any)

const AuthedFeedIndexRoute = AuthedFeedIndexImport.update({
  id: '/feed/',
  path: '/feed/',
  getParentRoute: () => AuthedRouteRoute,
} as any)

const NonAuthedLoginSsoCallbackRoute = NonAuthedLoginSsoCallbackImport.update({
  id: '/login/sso-callback',
  path: '/login/sso-callback',
  getParentRoute: () => NonAuthedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_nonAuthed': {
      id: '/_nonAuthed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NonAuthedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_nonAuthed/': {
      id: '/_nonAuthed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NonAuthedIndexImport
      parentRoute: typeof NonAuthedRouteImport
    }
    '/_nonAuthed/login/sso-callback': {
      id: '/_nonAuthed/login/sso-callback'
      path: '/login/sso-callback'
      fullPath: '/login/sso-callback'
      preLoaderRoute: typeof NonAuthedLoginSsoCallbackImport
      parentRoute: typeof NonAuthedRouteImport
    }
    '/_authed/feed/': {
      id: '/_authed/feed/'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof AuthedFeedIndexImport
      parentRoute: typeof AuthedRouteImport
    }
    '/_authed/profile/': {
      id: '/_authed/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthedProfileIndexImport
      parentRoute: typeof AuthedRouteImport
    }
    '/_nonAuthed/login/': {
      id: '/_nonAuthed/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NonAuthedLoginIndexImport
      parentRoute: typeof NonAuthedRouteImport
    }
    '/_nonAuthed/register/': {
      id: '/_nonAuthed/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof NonAuthedRegisterIndexImport
      parentRoute: typeof NonAuthedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteRouteChildren {
  AuthedFeedIndexRoute: typeof AuthedFeedIndexRoute
  AuthedProfileIndexRoute: typeof AuthedProfileIndexRoute
}

const AuthedRouteRouteChildren: AuthedRouteRouteChildren = {
  AuthedFeedIndexRoute: AuthedFeedIndexRoute,
  AuthedProfileIndexRoute: AuthedProfileIndexRoute,
}

const AuthedRouteRouteWithChildren = AuthedRouteRoute._addFileChildren(
  AuthedRouteRouteChildren,
)

interface NonAuthedRouteRouteChildren {
  NonAuthedIndexRoute: typeof NonAuthedIndexRoute
  NonAuthedLoginSsoCallbackRoute: typeof NonAuthedLoginSsoCallbackRoute
  NonAuthedLoginIndexRoute: typeof NonAuthedLoginIndexRoute
  NonAuthedRegisterIndexRoute: typeof NonAuthedRegisterIndexRoute
}

const NonAuthedRouteRouteChildren: NonAuthedRouteRouteChildren = {
  NonAuthedIndexRoute: NonAuthedIndexRoute,
  NonAuthedLoginSsoCallbackRoute: NonAuthedLoginSsoCallbackRoute,
  NonAuthedLoginIndexRoute: NonAuthedLoginIndexRoute,
  NonAuthedRegisterIndexRoute: NonAuthedRegisterIndexRoute,
}

const NonAuthedRouteRouteWithChildren = NonAuthedRouteRoute._addFileChildren(
  NonAuthedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof NonAuthedRouteRouteWithChildren
  '/': typeof NonAuthedIndexRoute
  '/login/sso-callback': typeof NonAuthedLoginSsoCallbackRoute
  '/feed': typeof AuthedFeedIndexRoute
  '/profile': typeof AuthedProfileIndexRoute
  '/login': typeof NonAuthedLoginIndexRoute
  '/register': typeof NonAuthedRegisterIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthedRouteRouteWithChildren
  '/': typeof NonAuthedIndexRoute
  '/login/sso-callback': typeof NonAuthedLoginSsoCallbackRoute
  '/feed': typeof AuthedFeedIndexRoute
  '/profile': typeof AuthedProfileIndexRoute
  '/login': typeof NonAuthedLoginIndexRoute
  '/register': typeof NonAuthedRegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authed': typeof AuthedRouteRouteWithChildren
  '/_nonAuthed': typeof NonAuthedRouteRouteWithChildren
  '/_nonAuthed/': typeof NonAuthedIndexRoute
  '/_nonAuthed/login/sso-callback': typeof NonAuthedLoginSsoCallbackRoute
  '/_authed/feed/': typeof AuthedFeedIndexRoute
  '/_authed/profile/': typeof AuthedProfileIndexRoute
  '/_nonAuthed/login/': typeof NonAuthedLoginIndexRoute
  '/_nonAuthed/register/': typeof NonAuthedRegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login/sso-callback'
    | '/feed'
    | '/profile'
    | '/login'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/login/sso-callback'
    | '/feed'
    | '/profile'
    | '/login'
    | '/register'
  id:
    | '__root__'
    | '/_authed'
    | '/_nonAuthed'
    | '/_nonAuthed/'
    | '/_nonAuthed/login/sso-callback'
    | '/_authed/feed/'
    | '/_authed/profile/'
    | '/_nonAuthed/login/'
    | '/_nonAuthed/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthedRouteRoute: typeof AuthedRouteRouteWithChildren
  NonAuthedRouteRoute: typeof NonAuthedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthedRouteRoute: AuthedRouteRouteWithChildren,
  NonAuthedRouteRoute: NonAuthedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authed",
        "/_nonAuthed"
      ]
    },
    "/_authed": {
      "filePath": "_authed/route.tsx",
      "children": [
        "/_authed/feed/",
        "/_authed/profile/"
      ]
    },
    "/_nonAuthed": {
      "filePath": "_nonAuthed/route.tsx",
      "children": [
        "/_nonAuthed/",
        "/_nonAuthed/login/sso-callback",
        "/_nonAuthed/login/",
        "/_nonAuthed/register/"
      ]
    },
    "/_nonAuthed/": {
      "filePath": "_nonAuthed/index.tsx",
      "parent": "/_nonAuthed"
    },
    "/_nonAuthed/login/sso-callback": {
      "filePath": "_nonAuthed/login/sso-callback.tsx",
      "parent": "/_nonAuthed"
    },
    "/_authed/feed/": {
      "filePath": "_authed/feed/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/profile/": {
      "filePath": "_authed/profile/index.tsx",
      "parent": "/_authed"
    },
    "/_nonAuthed/login/": {
      "filePath": "_nonAuthed/login/index.tsx",
      "parent": "/_nonAuthed"
    },
    "/_nonAuthed/register/": {
      "filePath": "_nonAuthed/register/index.tsx",
      "parent": "/_nonAuthed"
    }
  }
}
ROUTE_MANIFEST_END */
